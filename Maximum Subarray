//efficient solution
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int i,sum=0,m=INT_MIN;
        for(i=0;i<nums.size();i++)
        {
            sum+=nums[i];
            m=max(m,sum);
            if(sum<0) sum=0;
        }
        return m;
    }
};


//other

class Solution {

public:

    int maxSubArray(vector<int>& nums) {

        int arr[nums.size()];

        int sum=0, max,i,j,k;

        for(i=0;i<nums.size();i++)

            {

            arr[i]=sum+nums.at(i);

            sum=arr[i];

        }

        max=arr[0];

        for(i=nums.size()-1;i>=0;i--)

            {

            if(arr[i]>max)

                {

                max=arr[i];

            }

            for(j=0;j<i;j++)

                {

                k=arr[i]-arr[j];

                if(k>max)

                    {

                    max=k;

                }

            }

        }

        return max;

    }

};


//other 2

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int i,j,sum=0,m=INT_MIN;
        for(i=0;i<nums.size();i++)
        {
            for(j=i;j<nums.size();j++)
            {
                sum+=nums[j];
                m=max(sum,m);
            }
            sum=0;
        }
        return m;   
    }
};
