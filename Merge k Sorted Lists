/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int count=0, len,index=-1,i;
        len=lists.size();
        ListNode result(0);
        ListNode *temp=&result;
        vector<int> check(len,0);
        while(count<len)
        {
            for(i=0;i<len;i++)
            {
                if(check[i]==1)
                {
                    continue;
                }
                if(lists[i]==NULL)
                {
                    check[i]=1;
                    count++;
                    continue;
                }
                if(index==-1)
                {
                    index=i;
                    continue;
                }
                if(lists[i]->val < lists[index]->val)
                {
                    index=i;
                }
            }
            if(index!=-1){
                temp->next=lists[index];
                temp=temp->next;
                lists[index]=lists[index]->next;
            }
            index=-1;
        }
        return result.next;
    }
};
