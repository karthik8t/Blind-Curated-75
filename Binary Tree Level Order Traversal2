/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void recurse(TreeNode* root, int* flag, int count, vector<int>& level){
        if(root==NULL){
            return;
        }
        if(count==1){
            level.push_back(root->val);
            if(root->left!=NULL || root->right!=NULL){
                *flag=1;
            }
            return;
        }
        else{
            recurse(root->left,flag, count-1,level);
            recurse(root->right,flag, count-1,level);
        }
    }
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> result;
        vector<int> level;
        int count=1, flag=1;
        if(root==NULL){
            return {};
        }
        while(flag==1){
            flag=0;
            recurse(root, &flag, count,level);
            result.push_back(level);
            level.clear();
            count++;
        }
        return result;
    }
};
